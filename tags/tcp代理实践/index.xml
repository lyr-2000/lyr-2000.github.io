<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tcp代理实践 on 凌冬的个人博客</title>
    <link>https://lyr-2000.github.io/tags/tcp%E4%BB%A3%E7%90%86%E5%AE%9E%E8%B7%B5/</link>
    <description>Recent content in tcp代理实践 on 凌冬的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>LYR</copyright>
    <lastBuildDate>Sun, 20 Mar 2022 15:12:48 +0800</lastBuildDate>
    <atom:link href="https://lyr-2000.github.io/tags/tcp%E4%BB%A3%E7%90%86%E5%AE%9E%E8%B7%B5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>linux测试udp-tcp命令</title>
      <link>https://lyr-2000.github.io/post/14.%E6%96%B0%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E8%AF%AD%E8%A8%80%E6%8A%80%E6%9C%AF/golang/%E5%81%9A%E9%A1%B9%E7%9B%AE/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%A1%B9%E7%9B%AE/tcp%E4%BB%A3%E7%90%86%E5%AE%9E%E8%B7%B5/linux%E6%B5%8B%E8%AF%95udp-tcp%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 20 Mar 2022 15:12:48 +0800</pubDate>
      <guid>https://lyr-2000.github.io/post/14.%E6%96%B0%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E8%AF%AD%E8%A8%80%E6%8A%80%E6%9C%AF/golang/%E5%81%9A%E9%A1%B9%E7%9B%AE/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%A1%B9%E7%9B%AE/tcp%E4%BB%A3%E7%90%86%E5%AE%9E%E8%B7%B5/linux%E6%B5%8B%E8%AF%95udp-tcp%E5%91%BD%E4%BB%A4/</guid>
      <description>linux测试udp-tcp命令 ​ tcp端口检测 1 2 3 4 telnet localhost 8080 # 输入参数 nc -l -v 8080 # 监听端口 udp测试 1 2 3 nc -vu localhost 8080 # 实际使用时可以只用-u参</description>
    </item>
    <item>
      <title>syscall使用详解</title>
      <link>https://lyr-2000.github.io/post/14.%E6%96%B0%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E8%AF%AD%E8%A8%80%E6%8A%80%E6%9C%AF/golang/%E5%81%9A%E9%A1%B9%E7%9B%AE/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%A1%B9%E7%9B%AE/tcp%E4%BB%A3%E7%90%86%E5%AE%9E%E8%B7%B5/syscall%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sun, 20 Mar 2022 11:03:48 +0800</pubDate>
      <guid>https://lyr-2000.github.io/post/14.%E6%96%B0%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E8%AF%AD%E8%A8%80%E6%8A%80%E6%9C%AF/golang/%E5%81%9A%E9%A1%B9%E7%9B%AE/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%A1%B9%E7%9B%AE/tcp%E4%BB%A3%E7%90%86%E5%AE%9E%E8%B7%B5/syscall%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</guid>
      <description>syscall使用详解 ​ https://golang.hotexamples.com/zh/examples/syscall/-/Listen/golang-listen-function-examples.html 1 2 3 4 5 // Set backlog size to the maximum if err = syscall.Listen(fd, syscall.SOMAXCONN); err != nil { syscall.Close(fd) return nil, err } 参考c底层源码 1 2 3 4 5 6 7 8 SYSCALL_DEFINE2(listen, int, fd, int, backlog) { // sysctl_somaxconn 是系统变量 net.core.somaxconn 的值</description>
    </item>
    <item>
      <title>linux下使用 epoll优化</title>
      <link>https://lyr-2000.github.io/post/14.%E6%96%B0%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E8%AF%AD%E8%A8%80%E6%8A%80%E6%9C%AF/golang/%E5%81%9A%E9%A1%B9%E7%9B%AE/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%A1%B9%E7%9B%AE/tcp%E4%BB%A3%E7%90%86%E5%AE%9E%E8%B7%B5/linux%E4%B8%8B%E4%BD%BF%E7%94%A8-epoll%E4%BC%98%E5%8C%96/</link>
      <pubDate>Sat, 19 Mar 2022 19:31:48 +0800</pubDate>
      <guid>https://lyr-2000.github.io/post/14.%E6%96%B0%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E8%AF%AD%E8%A8%80%E6%8A%80%E6%9C%AF/golang/%E5%81%9A%E9%A1%B9%E7%9B%AE/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%A1%B9%E7%9B%AE/tcp%E4%BB%A3%E7%90%86%E5%AE%9E%E8%B7%B5/linux%E4%B8%8B%E4%BD%BF%E7%94%A8-epoll%E4%BC%98%E5%8C%96/</guid>
      <description>linux下使用 epoll优化 ​ 可以参考的tcp框架 linux 下使用 epoll优化，你必须知道的概念 level trigger, 和 edge trigger 名字 原理 水平出发（LT) 当进行sock</description>
    </item>
    <item>
      <title>windows使用iocp优化</title>
      <link>https://lyr-2000.github.io/post/14.%E6%96%B0%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E8%AF%AD%E8%A8%80%E6%8A%80%E6%9C%AF/golang/%E5%81%9A%E9%A1%B9%E7%9B%AE/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%A1%B9%E7%9B%AE/tcp%E4%BB%A3%E7%90%86%E5%AE%9E%E8%B7%B5/windows%E4%BD%BF%E7%94%A8iocp%E4%BC%98%E5%8C%96/</link>
      <pubDate>Sat, 19 Mar 2022 18:59:48 +0800</pubDate>
      <guid>https://lyr-2000.github.io/post/14.%E6%96%B0%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E8%AF%AD%E8%A8%80%E6%8A%80%E6%9C%AF/golang/%E5%81%9A%E9%A1%B9%E7%9B%AE/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E9%A1%B9%E7%9B%AE/tcp%E4%BB%A3%E7%90%86%E5%AE%9E%E8%B7%B5/windows%E4%BD%BF%E7%94%A8iocp%E4%BC%98%E5%8C%96/</guid>
      <description>windows使用iocp优化 ​ 参考项目，windows下使用 epoll优化</description>
    </item>
  </channel>
</rss>
