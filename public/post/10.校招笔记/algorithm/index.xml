<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on Even - A super concise theme for Hugo</title>
    <link>http://doc.lyr-2000.xyz/post/10.%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AE%B0/algorithm/</link>
    <description>Recent content in Algorithm on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>lyr</copyright>
    <lastBuildDate>Mon, 16 Aug 2021 00:45:18 +0800</lastBuildDate><atom:link href="http://doc.lyr-2000.xyz/post/10.%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AE%B0/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://doc.lyr-2000.xyz/post/10.%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AE%B0/algorithm/bintree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://doc.lyr-2000.xyz/post/10.%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AE%B0/algorithm/bintree/</guid>
      <description>[TOC] 二叉树 一. 二叉树一般定义 一般二叉树的基本定义如下: 1 2 3 4 5 6 7 8 9 10 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode(int x) : val(x), left(NULL), right(NULL) {} * }; */ /** 二</description>
    </item>
    
    <item>
      <title></title>
      <link>http://doc.lyr-2000.xyz/post/10.%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AE%B0/algorithm/dp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://doc.lyr-2000.xyz/post/10.%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AE%B0/algorithm/dp/</guid>
      <description>动态规划题目整理 [TOC] 一. 背包问题 背包问题可以归结为 以下三总形式 01 背包问题 : 每个物品只有或者不选两种形式 完全背包问题 : 每个物品可以选择无限多次 多</description>
    </item>
    
    <item>
      <title></title>
      <link>http://doc.lyr-2000.xyz/post/10.%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AE%B0/algorithm/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://doc.lyr-2000.xyz/post/10.%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AE%B0/algorithm/readme/</guid>
      <description>动态规划经典题型 二叉树经典题型</description>
    </item>
    
    <item>
      <title></title>
      <link>http://doc.lyr-2000.xyz/post/10.%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AE%B0/algorithm/%E6%88%91%E7%88%B1%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://doc.lyr-2000.xyz/post/10.%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AE%B0/algorithm/%E6%88%91%E7%88%B1%E7%AE%97%E6%B3%95/</guid>
      <description>[TOC] 最大最小值的宏定义 1 2 3 4 int c_char = CHAR_BIT; int n_int = INT_MIN; short n_short = SHRT_MIN; long n_long = LONG_MAX; 最大值 : INT_MAX 最小值 : INT_MIN 同理其他类型 关于取余 取余是带符号的 负数取余是负数 正数取余是正</description>
    </item>
    
  </channel>
</rss>
