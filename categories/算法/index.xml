<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on 笔试面试经验浓缩</title>
    <link>https://lyr-2000.github.io/categories/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on 笔试面试经验浓缩</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>lyr</copyright>
    <lastBuildDate>Sat, 10 Apr 2021 19:06:43 +0000</lastBuildDate>
    
	<atom:link href="https://lyr-2000.github.io/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>面试问的一些算法</title>
      <link>https://lyr-2000.github.io/post/06.%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01.%E7%AE%97%E6%B3%95/04.%E9%9D%A2%E8%AF%95%E9%97%AE%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 10 Apr 2021 19:06:43 +0000</pubDate>
      
      <guid>https://lyr-2000.github.io/post/06.%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01.%E7%AE%97%E6%B3%95/04.%E9%9D%A2%E8%AF%95%E9%97%AE%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AE%97%E6%B3%95/</guid>
      <description>给定一个 1-7随机数生成器 如何生成1-10随机数并验证？ 力扣上有一样的题目 470. 用 Rand7() 实现 Rand10() - 力扣（LeetCode） (leetcode-cn.com) 我们可以使用拒绝采样的方法</description>
    </item>
    
    <item>
      <title>时间复杂度和空间复杂度</title>
      <link>https://lyr-2000.github.io/post/06.%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01.%E7%AE%97%E6%B3%95/03.%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%92%8C%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</link>
      <pubDate>Tue, 30 Mar 2021 16:25:40 +0000</pubDate>
      
      <guid>https://lyr-2000.github.io/post/06.%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01.%E7%AE%97%E6%B3%95/03.%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%92%8C%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</guid>
      <description>算法（Algorithm）是指用来操作数据、解决程序问题的一组方法。对于同一个问题，使用不同的算法，也许最终得到的结果是一样的，但在过程中消</description>
    </item>
    
    <item>
      <title>排序算法</title>
      <link>https://lyr-2000.github.io/post/06.%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01.%E7%AE%97%E6%B3%95/01.%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 21 Mar 2021 19:07:54 +0000</pubDate>
      
      <guid>https://lyr-2000.github.io/post/06.%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01.%E7%AE%97%E6%B3%95/01.%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
      <description>插入排序 直接插入排序 插入排序是最简单的，我们不断比较插入数据 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // 插入排序 // 时间复杂度 n^2 // 因为我们这里</description>
    </item>
    
    <item>
      <title>查找算法</title>
      <link>https://lyr-2000.github.io/post/06.%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01.%E7%AE%97%E6%B3%95/02.%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 21 Mar 2021 19:07:54 +0000</pubDate>
      
      <guid>https://lyr-2000.github.io/post/06.%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/01.%E7%AE%97%E6%B3%95/02.%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</guid>
      <description>线性表查找 顺序查找 顺序查找(Sequential Search) 的查找过程为：从表的一端开始， 依次将记录的关键字和给定值进行比较，若某个记录的关键字和给定</description>
    </item>
    
  </channel>
</rss>