<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>状态转移dp【有向图的最大长度】 on 凌冬的个人博客</title>
    <link>https://lyr-2000.github.io/categories/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/</link>
    <description>Recent content in 状态转移dp【有向图的最大长度】 on 凌冬的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>LYR</copyright>
    <lastBuildDate>Tue, 15 Mar 2022 14:57:48 +0800</lastBuildDate>
    
	<atom:link href="https://lyr-2000.github.io/categories/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>dp8.乘积为正数的最长连续子数组</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/dp8.%E4%B9%98%E7%A7%AF%E4%B8%BA%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84/</link>
      <pubDate>Tue, 15 Mar 2022 14:57:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/dp8.%E4%B9%98%E7%A7%AF%E4%B8%BA%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
      <description>dp8.乘积为正数的最长连续子数组 ​ 给定一个长度为 n 的整数数组，请你找出其中最长的乘积为正数的子数组长度。 子数组的定义是原数组中一定长度的连</description>
    </item>
    
    <item>
      <title>买卖股票的最好时机(二)</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E5%A5%BD%E6%97%B6%E6%9C%BA%E4%BA%8C/</link>
      <pubDate>Tue, 15 Mar 2022 13:52:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E5%A5%BD%E6%97%B6%E6%9C%BA%E4%BA%8C/</guid>
      <description>买卖股票的最好时机(二) ​ 描述 假设你有一个数组prices，长度为n，其中prices[i]是某只股票在第i天的价格，请根据这个价格数组，返</description>
    </item>
    
    <item>
      <title>lc.918.环形子数组最大和</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/lc.918.%E7%8E%AF%E5%BD%A2%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%92%8C/</link>
      <pubDate>Sat, 12 Mar 2022 16:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/lc.918.%E7%8E%AF%E5%BD%A2%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%92%8C/</guid>
      <description>lc.918.环形子数组最大和 ​ 给定一个长度为 n 的环形整数数组 nums ，返回 nums 的非空 子数组 的最大可能和 。 环形数组 意味着数组的末端将会与开头相连呈环</description>
    </item>
    
    <item>
      <title>面试题.正则表达式匹配</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/%E9%9D%A2%E8%AF%95%E9%A2%98.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Thu, 10 Mar 2022 17:46:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/%E9%9D%A2%E8%AF%95%E9%A2%98.%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D/</guid>
      <description>面试题.正则表达式匹配 请实现一个函数用来匹配包含&amp;rsquo;. &amp;lsquo;和&amp;rsquo;&amp;lsquo;的正则表达式。模式中的字符&amp;rs</description>
    </item>
    
    <item>
      <title>lc.剑指.爬楼梯的最小成本</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/lc.%E5%89%91%E6%8C%87.%E7%88%AC%E6%A5%BC%E6%A2%AF%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC/</link>
      <pubDate>Thu, 10 Mar 2022 16:51:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/lc.%E5%89%91%E6%8C%87.%E7%88%AC%E6%A5%BC%E6%A2%AF%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC/</guid>
      <description>lc.剑指.爬楼梯的最小成本 数组的每个下标作为一个阶梯，第 i 个阶梯对应着一个非负数的体力花费值 cost[i]（下标从 0 开始）。 每当爬上一个阶</description>
    </item>
    
    <item>
      <title>lc.53.最大子数组和</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/lc.53.%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</link>
      <pubDate>Thu, 10 Mar 2022 13:25:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-dp/%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBdp%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6/lc.53.%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</guid>
      <description>lc.53.最大子数组和 ​ 给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。 子数组 是数组中的一</description>
    </item>
    
  </channel>
</rss>