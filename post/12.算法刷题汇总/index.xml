<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>12.算法刷题汇总 on 凌冬的个人博客</title>
    <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/</link>
    <description>Recent content in 12.算法刷题汇总 on 凌冬的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>lyr</copyright>
    <lastBuildDate>Sat, 14 Aug 2021 22:42:48 +0800</lastBuildDate>
    
	<atom:link href="https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ac自动机</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/ac%E8%87%AA%E5%8A%A8%E6%9C%BA/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/ac%E8%87%AA%E5%8A%A8%E6%9C%BA/</guid>
      <description>ac自动机算法 ac自动机图示 KMP 算法原理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include &amp;lt;bits/stdc++.h&amp;gt;#define next abcdefg using namespace std; const int MAXN = 1E6+10; int next[MAXN]; int</description>
    </item>
    
    <item>
      <title>lc.08.08有重复字符串的排列组合</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/dfs/%E6%9C%89%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/dfs/%E6%9C%89%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/</guid>
      <description>面试题 08.08. 有重复字符串的排列组合 Difficulty: **有重复字符串的排列组合。编写一种方法，计算某字符串的所有排列组合。 示例1: 输入：S = &amp;ldquo;qqe&amp;rdquo; 输出：[&amp;ldqu</description>
    </item>
    
    <item>
      <title>lc.081.允许重复选择元素的组合</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/lc.%E5%85%81%E8%AE%B8%E9%87%8D%E5%A4%8D%E9%80%89%E6%8B%A9%E5%85%83%E7%B4%A0%E7%9A%84%E7%BB%84%E5%90%88/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/lc.%E5%85%81%E8%AE%B8%E9%87%8D%E5%A4%8D%E9%80%89%E6%8B%A9%E5%85%83%E7%B4%A0%E7%9A%84%E7%BB%84%E5%90%88/</guid>
      <description>剑指 Offer II 081. 允许重复选择元素的组合 Difficulty: **给定一个无重复元素的正整数数组 candidates 和一个正整数 target ，找出 candidates 中所有可以使数字和为目标数 target 的唯一组合。 candidates 中的数</description>
    </item>
    
    <item>
      <title>lc.10.10.数据流的秩【树状数组】</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/lc.10.10.%E6%95%B0%E5%AD%97%E6%B5%81%E7%9A%84%E7%A7%A9/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/lc.10.10.%E6%95%B0%E5%AD%97%E6%B5%81%E7%9A%84%E7%A7%A9/</guid>
      <description>10.10.数据流的秩 面试题 10.10. 数字流的秩 Difficulty: **假设你正在读取一串整数。每隔一段时间，你希望能找出数字 x 的秩(小于或等于 x 的值的个数)。请实现</description>
    </item>
    
    <item>
      <title>lc.289.生命游戏</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/289.%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/289.%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/</guid>
      <description>289. 生命游戏 Difficulty: **根据 百度百科 ，生命游戏，简称为生命，是英国数学家约翰·何顿·康威在 1970 年发明的细胞自动机。 给定一个包含 m × n 个格子的面板，每一</description>
    </item>
    
    <item>
      <title>lc.生存人数【树状数组】</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/lc.1395.%E7%BB%9F%E8%AE%A1%E4%BD%9C%E6%88%98%E5%8D%95%E4%BD%8D%E6%95%B0/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/lc.1395.%E7%BB%9F%E8%AE%A1%E4%BD%9C%E6%88%98%E5%8D%95%E4%BD%8D%E6%95%B0/</guid>
      <description>1395. 统计作战单位数 Difficulty: ** n 名士兵站成一排。每个士兵都有一个 独一无二 的评分 rating 。 每 3 个士兵可以组成一个作战单位，分组规则如下： 从队伍中选出下标分别为</description>
    </item>
    
    <item>
      <title>lc.生存人数【树状数组】</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/lc.16.10%E7%94%9F%E5%AD%98%E4%BA%BA%E6%95%B0/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/lc.16.10%E7%94%9F%E5%AD%98%E4%BA%BA%E6%95%B0/</guid>
      <description>面试题 16.10. 生存人数 Difficulty: **给定 N 个人的出生年份和死亡年份，第 i 个人的出生年份为 birth[i]，死亡年份为 death[i]，实现一个方法以计算生</description>
    </item>
    
    <item>
      <title>Manacher算法</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%9B%9E%E6%96%87/manacher%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%9B%9E%E6%96%87/manacher%E7%AE%97%E6%B3%95/</guid>
      <description></description>
    </item>
    
    <item>
      <title>tarjan算法</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/tarjan%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/tarjan%E7%AE%97%E6%B3%95/</guid>
      <description>tarjan 算法 原理： 向上标记法 o(N) 倍增算法 fa[i,j] 表示从i开始，向上走 $2^j$ 步， 能走到的节点， $0&amp;lt;=j &amp;lt;= logN$ $ depth[i] $ 表示深度 哨兵： 从i 开始跳 $2^j$ 步会跳到根节点，那么 $ fa[i,j] = 0</description>
    </item>
    
    <item>
      <title>两个回文子字符串长度的最大乘积</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%9B%9E%E6%96%87/lc1960.%E4%B8%A4%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%95%BF%E5%BA%A6%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%9B%9E%E6%96%87/lc1960.%E4%B8%A4%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%95%BF%E5%BA%A6%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF/</guid>
      <description>1960. 两个回文子字符串长度的最大乘积 Difficulty: 困难 给你一个下标从 0 开始的字符串 s ，你需要找到两个 **不重叠****的回文 **子字符串，它们的长度都必须为</description>
    </item>
    
    <item>
      <title>全排列算法</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%85%A8%E6%8E%92%E5%88%97%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%85%A8%E6%8E%92%E5%88%97%E7%AE%97%E6%B3%95/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 class Solution { public: vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; permuteUnique(vector&amp;lt;int&amp;gt;&amp;amp; nums) { sort(nums.begin(),nums.end()); s = nums; visited = vector&amp;lt;bool&amp;gt; (s.size(),false); dfs(0); return res; } vector&amp;lt;int&amp;gt; s; vector&amp;lt;int&amp;gt; path; vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; res; vector&amp;lt;bool&amp;gt; visited; void dfs(int cur) { if(path.size() &amp;gt;= s.size()) {</description>
    </item>
    
    <item>
      <title>动态规划使用场景总结</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%E6%80%BB%E7%BB%93/</guid>
      <description>动态规划使用场景 数据不可交换 数据不可排序 dp[i] = max{ dp[i-1]+1【a[i]&amp;gt;a[i-1]】 ,1 }</description>
    </item>
    
    <item>
      <title>双指针算法</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8F%8C%E6%8C%87%E9%92%88%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%8F%8C%E6%8C%87%E9%92%88%E7%AE%97%E6%B3%95/</guid>
      <description>15. 三数之和 Difficulty: 中等 给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 _a，b，c ，_使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的</description>
    </item>
    
    <item>
      <title>回文子序列</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%9B%9E%E6%96%87/%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%9B%9E%E6%96%87/%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>给定一个长度为 nn 的整数序列 a1,a2,…,an 请你判断序列 aa 是否包含长度至少为 33 的回文子序列？ 输入格式 第一行包含整数 T ，表示共有 T 组测试数据</description>
    </item>
    
    <item>
      <title>快速排序算法</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</guid>
      <description>快速排序算法的基本原理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std; vector&amp;lt;int&amp;gt; arr = {3,4,8,1,2,3}; void quicksort(int l ,int r) { if(l&amp;gt;=r) return; int i = l-1,j = r+1; int pivot = arr[(i+j)/2];</description>
    </item>
    
    <item>
      <title>枚举_日期类题</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%9E%9A%E4%B8%BE_%E6%97%A5%E6%9C%9F%E7%B1%BB%E9%A2%98/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%9E%9A%E4%B8%BE_%E6%97%A5%E6%9C%9F%E7%B1%BB%E9%A2%98/</guid>
      <description>已知 11 年 11 月 11 日是星期一。 现在给定一个日期，请你判断是星期几。 注意闰年的 22 月有 2929 天。 满足下面条件之一的是闰年： 年份是 44 的整数倍，而且不是 100100 的</description>
    </item>
    
    <item>
      <title>树状数组算法</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</guid>
      <description>有 nn 头奶牛，已知它们的身高为 1∼n1∼n 且各不相同，但不知道每头奶牛的具体身高。 现在这 nn 头奶牛站成一列，已知第 ii 头牛前面有 AiAi 头牛比它低，求每</description>
    </item>
    
    <item>
      <title>模拟退火算法</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB%E7%AE%97%E6%B3%95/</guid>
      <description>模拟退火算法 入门 介绍模拟退火前，先介绍爬山算法。爬山算法是一种简单的贪心搜索算法，该算法每次从当前解的临近解空间中选择一个最优解作为当前解，</description>
    </item>
    
    <item>
      <title>笔试面试常考总结</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E7%AC%94%E8%AF%95%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%80%83%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E7%AC%94%E8%AF%95%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%80%83%E6%80%BB%E7%BB%93/</guid>
      <description>笔试面试常考总结</description>
    </item>
    
    <item>
      <title>链表问题</title>
      <link>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E9%93%BE%E8%A1%A8%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E6%B1%87%E6%80%BB/%E9%93%BE%E8%A1%A8%E9%97%AE%E9%A2%98/</guid>
      <description>82. 删除排序链表中的重复元素 II Difficulty: 中等 存在一个按升序排列的链表，给你这个链表的头节点 head ，请你删除链表中所有存在数字重复情况的节点，只保留原始链表</description>
    </item>
    
  </channel>
</rss>