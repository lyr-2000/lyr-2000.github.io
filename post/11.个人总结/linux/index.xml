<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on 笔试面试经验浓缩</title>
    <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/</link>
    <description>Recent content in linux on 笔试面试经验浓缩</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>lyr</copyright>
    <lastBuildDate>Tue, 17 Aug 2021 13:48:22 +0800</lastBuildDate>
    
	<atom:link href="https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IO方面的知识</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/io%E6%96%B9%E9%9D%A2%E7%9A%84%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/io%E6%96%B9%E9%9D%A2%E7%9A%84%E7%9F%A5%E8%AF%86/</guid>
      <description>linux 文件系统相关 像一家公司要做 To B 的生意，发现客户多种多样，众口难调，不同的地域不一样，不同的行业不一样。如果你不懂某个地方的规矩，根本卖不出</description>
    </item>
    
    <item>
      <title>linux inode原理</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/linux_inode%E5%8E%9F%E7%90%86/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/linux_inode%E5%8E%9F%E7%90%86/</guid>
      <description>什么是 inode inode包含很多的文件元信息，但不包含文件名，例如：字节数、属主UserID、属组GroupID、读写执行权限、时间戳等。 而文件名</description>
    </item>
    
    <item>
      <title>linux x86架构【linux体系学习】</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/linux-x86%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/linux-x86%E6%9E%B6%E6%9E%84/</guid>
      <description>linux x86架构 CPU 对于一个计算机来讲，最核心的就是CPU（Central Processing Unit，中央处理器）。这是这台计算机的大脑，所有的设备都围绕它展开。</description>
    </item>
    
    <item>
      <title>linux调优_系统负载</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/%E8%B0%83%E4%BC%98_%E7%B3%BB%E7%BB%9F%E8%B4%9F%E8%BD%BD/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/%E8%B0%83%E4%BC%98_%E7%B3%BB%E7%BB%9F%E8%B4%9F%E8%BD%BD/</guid>
      <description>常见的 调优命令 top uptime</description>
    </item>
    
    <item>
      <title>OJ 环境安装</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/oj%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/oj%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</guid>
      <description>安装OJ 环境的过程 安装的文档 2.1、安装安全计算模型 libseccomp RunC 默认的编译配置是支持 seccomp 的，所以我们需要先安装libseccomp, 如果是centos</description>
    </item>
    
    <item>
      <title>基础命令</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</guid>
      <description>基础命令 chmod ， change mod 修改模式，比如 chmod a+x app.sh cd , change directory , 切换目录 ls -l, 用列表的方式展示【 -l 表示 一行一个，列表的方式】 chown ,change owner ,改变所属用户 chgrp,change group ,改变所属组</description>
    </item>
    
    <item>
      <title>添加用户权限</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90/</guid>
      <description>usermod 命令 1 2 3 4 5 useradd lilei sudo usermod -aG sudo lilei # 给 lilei 添加到 sudo 用户组 su -l lilei 给user 用户分配权限</description>
    </item>
    
  </channel>
</rss>