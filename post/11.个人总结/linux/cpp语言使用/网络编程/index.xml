<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>网络编程 on Even - A super concise theme for Hugo</title>
    <link>http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 网络编程 on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>lyr</copyright>
    <lastBuildDate>Tue, 17 Aug 2021 13:48:22 +0800</lastBuildDate>
    
	<atom:link href="http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>arp协议等原理</title>
      <link>http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/arp%E5%8D%8F%E8%AE%AE%E5%8E%9F%E7%90%86%E7%AD%89/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/arp%E5%8D%8F%E8%AE%AE%E5%8E%9F%E7%90%86%E7%AD%89/</guid>
      <description>ip 用 int 表示，4个字节，mac 地址记住是 6个字节 看这个图，我们要记住，只要是 6个字节的，字节说是 MAC 地址 看这个图，如果类型是： 0800 -&amp;gt; ip数据包 0806 -&amp;gt;</description>
    </item>
    
    <item>
      <title>epoll学习</title>
      <link>http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/epoll-%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/epoll-%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/</guid>
      <description>学习目标 poll函数 epoll 多路IO 模型 了解 epoll 反应堆模式设计 看懂 epoll 反应堆模型实现代码 epoll 的两种模式 水平触发： 高电平代表1 只要缓冲区有数据，就一直通知</description>
    </item>
    
    <item>
      <title>select 、poll api学习</title>
      <link>http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/select-api/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/select-api/</guid>
      <description>wrap.c源码学习 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60</description>
    </item>
    
    <item>
      <title>协议相关的内容【网络基础】</title>
      <link>http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</guid>
      <description>协议 概念： 协议是事先约定好的，大家共同遵守 的一组规则 可以简单理解为各个主机之间通信的使用的共同的语言。 **应用层：**就是应用软件使用的协议</description>
    </item>
    
    <item>
      <title>服务端开发流程【网络基础】</title>
      <link>http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>http://doc.lyr-2000.xyz/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/linux/cpp%E8%AF%AD%E8%A8%80%E4%BD%BF%E7%94%A8/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/</guid>
      <description>服务端开发流程 创建 socket，返回 文件描述符 lfd &amp;ndash;socket() 将 lfd 和 ip port 绑定 &amp;ndash;bind() 将 lfd 由主动监听边被动监听 接受一个新的连接，得到一个 文件描述符 cfd &amp;ndash;accept() 这个是通信</description>
    </item>
    
  </channel>
</rss>