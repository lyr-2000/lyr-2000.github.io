<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JAVA八股深挖_level1 on 凌冬的个人博客</title>
    <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/</link>
    <description>Recent content in JAVA八股深挖_level1 on 凌冬的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>lyr</copyright>
    <lastBuildDate>Tue, 17 Aug 2021 13:48:22 +0800</lastBuildDate>
    
	<atom:link href="https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>java前端编译器</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/java-%E5%89%8D%E7%AB%AF%E7%BC%96%E8%AF%91%E5%99%A8/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/java-%E5%89%8D%E7%AB%AF%E7%BC%96%E8%AF%91%E5%99%A8/</guid>
      <description>为什么学习字节码文件 类的结构有几个部分 字节码都有哪些？ java class文件由上面组成 局部变量表 class文件版本号 魔数 【确定当前文件是一个能被虚</description>
    </item>
    
    <item>
      <title>java并发八股</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/java%E5%B9%B6%E5%8F%91%E5%85%AB%E8%82%A1/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/java%E5%B9%B6%E5%8F%91%E5%85%AB%E8%82%A1/</guid>
      <description>java 并发八股文 面试题网站 线程生命周期 当线程被创建并启动以后，它既不是一启动就进入了执行状态，也不是一直处于执行状态。在线程的生命周期中，它要经</description>
    </item>
    
    <item>
      <title>java并发八股[reentrantLock,查看线程死锁]</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/reentrantlock/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/reentrantlock/</guid>
      <description>如何防止死锁 tryLock 按经历只获取一个资源，不要同时获取多个资源 尽量按顺序上锁 总结： tryLock 方法 lock方法 lock是无条件阻塞加锁，tryLock 的话是</description>
    </item>
    
    <item>
      <title>三色标记 cms核心算法</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/%E4%B8%89%E8%89%B2%E6%A0%87%E8%AE%B0cms%E6%A0%B8%E5%BF%83/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/%E4%B8%89%E8%89%B2%E6%A0%87%E8%AE%B0cms%E6%A0%B8%E5%BF%83/</guid>
      <description>学习视频 cms的核心算法三色标记法 三色标记法： 逻辑上的抽象，将对象分为3种颜色， 黑色，表示 已经标记完成，确认不是垃圾，灰色自己标记完成了，但</description>
    </item>
    
    <item>
      <title>怼项目</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/%E6%80%BC%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/%E6%80%BC%E9%A1%B9%E7%9B%AE/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 .: 选择题也经常考，之前转转笔试就考了 .: 8:1:1 江: 这个我知道 江: 他问我你们项目是怎么调整的 江: 新生：老年</description>
    </item>
    
    <item>
      <title>线程安全和线程池</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E5%92%8C%E7%BA%BF%E7%A8%8B%E6%B1%A0%E8%A2%AB%E9%97%AE%E8%BF%87%E5%87%A0%E6%AC%A1%E4%BA%86/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%85%AB%E8%82%A1%E6%96%87%E4%B8%93%E9%A2%98%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/java%E5%85%AB%E8%82%A1%E6%B7%B1%E6%8C%96/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E5%92%8C%E7%BA%BF%E7%A8%8B%E6%B1%A0%E8%A2%AB%E9%97%AE%E8%BF%87%E5%87%A0%E6%AC%A1%E4%BA%86/</guid>
      <description>线程安全和线程池 线程安全的理解，其实应该说内存安全比较好，堆是共享的 学习教程 JAVA 内存模型 栈 堆 新生代 eden s1 s2 老年代 程序计数器 本地方法栈 元空间 直接内</description>
    </item>
    
  </channel>
</rss>