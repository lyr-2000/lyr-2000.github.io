<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>剑指offer on 凌冬的个人博客</title>
    <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%89%91%E6%8C%87offer/</link>
    <description>Recent content in 剑指offer on 凌冬的个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>LYR</copyright>
    <lastBuildDate>Tue, 17 Aug 2021 13:48:22 +0800</lastBuildDate>
    
	<atom:link href="https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%89%91%E6%8C%87offer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>包含min函数的栈</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%89%91%E6%8C%87offer/%E6%A0%88/%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%89%91%E6%8C%87offer/%E6%A0%88/%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/</guid>
      <description>包含min函数的栈 设计一个支持push，pop，top等操作并且可以在$O(1)$时间内检索出最小元素的堆栈。 push(x)–将元素x插入栈</description>
    </item>
    
    <item>
      <title>把数组排成最小的数</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%89%91%E6%8C%87offer/%E8%B4%AA%E5%BF%83/%E6%8A%8A%E6%95%B0%E7%BB%84%E6%8E%92%E6%88%90%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%89%91%E6%8C%87offer/%E8%B4%AA%E5%BF%83/%E6%8A%8A%E6%95%B0%E7%BB%84%E6%8E%92%E6%88%90%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0/</guid>
      <description>输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。 例如输入数组 [3,32,321][3,32,32</description>
    </item>
    
    <item>
      <title>栈的压入弹出序列</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%89%91%E6%8C%87offer/%E6%A0%88/%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%89%91%E6%8C%87offer/%E6%A0%88/%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97/</guid>
      <description>栈的压入弹出序列 输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。 假设压入栈的所有数字均不相等。 例如序</description>
    </item>
    
    <item>
      <title>连续子数组的最大和</title>
      <link>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%89%91%E6%8C%87offer/%E8%B4%AA%E5%BF%83/%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%92%8C/</link>
      <pubDate>Tue, 17 Aug 2021 13:48:22 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/11.%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/%E5%89%91%E6%8C%87offer/%E8%B4%AA%E5%BF%83/%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%92%8C/</guid>
      <description>输入一个 非空 整型数组，数组里的数可能为正，也可能为负。 数组中一个或连续的多个整数组成一个子数组。 求所有子数组的和的最大值。 要求时间复杂度为 $O(N)$</description>
    </item>
    
  </channel>
</rss>