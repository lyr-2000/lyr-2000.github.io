<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>动态规划 on 笔试面试经验浓缩</title>
    <link>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
    <description>Recent content in 动态规划 on 笔试面试经验浓缩</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>lyr</copyright>
    <lastBuildDate>Sat, 14 Aug 2021 22:42:48 +0800</lastBuildDate>
    
	<atom:link href="https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>乘积最大的子数组</title>
      <link>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E4%B9%98%E7%A7%AF%E6%9C%80%E5%A4%A7%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E4%B9%98%E7%A7%AF%E6%9C%80%E5%A4%A7%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
      <description>152. 乘积最大子数组 Difficulty: 中等 给你一个整数数组 nums ，请你找出数组中乘积最大的连续子数组（该子数组中至少包含一个数字），并返回该子数组所对应的乘积。 示例</description>
    </item>
    
    <item>
      <title>字符串交错组成</title>
      <link>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BA%A4%E9%94%99%E7%BB%84%E6%88%90/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BA%A4%E9%94%99%E7%BB%84%E6%88%90/</guid>
      <description>剑指 Offer II 096. 字符串交织 Difficulty: 中等 给定三个字符串 s1、s2、s3，请判断 s3 能不能由 s1 和 s2交织（交错） 组成。 两个字符串 s 和 t 交织 的定义与过程如下，其</description>
    </item>
    
    <item>
      <title>数位DP 算法</title>
      <link>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%95%B0%E4%BD%8Ddp%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%95%B0%E4%BD%8Ddp%E7%AE%97%E6%B3%95/</guid>
      <description>数位dp 算法模板 学习视频 核心算法原理 参数解释 可选参数： pre:表示上一个数是多少 有些题目会用到前面的数 lead :前导零是否存在，lead=1存在前</description>
    </item>
    
    <item>
      <title>最长上升子序列解题代码</title>
      <link>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97%E6%A8%A1%E6%9D%BF%E9%A2%98/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97%E6%A8%A1%E6%9D%BF%E9%A2%98/</guid>
      <description>673. 最长递增子序列的个数 Difficulty: 中等 给定一个未排序的整数数组，找到最长递增子序列的个数。 示例 1: 1 2 3 输入: [1,3,5,4,7] 输出: 2 解释: 有两个最长递增子序列，分别</description>
    </item>
    
    <item>
      <title>最长回文字串</title>
      <link>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%97%E4%B8%B2/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%97%E4%B8%B2/</guid>
      <description>5. 最长回文子串 Difficulty: 中等 给你一个字符串 s，找到 s 中最长的回文子串。 示例 1： 1 2 3 输入：s = &amp;#34;babad&amp;#34; 输出：&amp;#34;bab&amp;#34; 解释：&amp;#34;ab</description>
    </item>
    
    <item>
      <title>硬币找零和贪心问题</title>
      <link>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%A1%AC%E5%B8%81%E6%89%BE%E9%9B%B6%E5%92%8C%E8%B4%AA%E5%BF%83/</link>
      <pubDate>Sat, 14 Aug 2021 22:42:48 +0800</pubDate>
      
      <guid>https://lyr-2000.github.io/post/12.%E4%BB%A3%E7%A0%81%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%A1%AC%E5%B8%81%E6%89%BE%E9%9B%B6%E5%92%8C%E8%B4%AA%E5%BF%83/</guid>
      <description>给定不同面额的硬币 coins 和一个总金额 amount。编写一个函数来计算可以凑成总金额所需的最少的硬币个数。如果没有任何一种硬币组合能组成总金额，返</description>
    </item>
    
  </channel>
</rss>